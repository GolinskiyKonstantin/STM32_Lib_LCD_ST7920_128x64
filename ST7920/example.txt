/*	сохраняем данный файл в кодировке UTF-8		*/

 author: Golinskiy Konstantin	e-mail: golinskiy.konstantin@gmail.com
 
 

// Делаем настройки в файле ST7920.h

/*
	подключение LCD_128_64_ST7920:

	в CubeMX включаем SPI только на отправку скорость около 1.125Мбит/с ( если больше то будут иероглифы )
	также ставим CPOL HIGH   and  CPHA 2Edge

	( пины желательно называем как в коде если нет то в коде ставим нужные )

	GND	 ->   GND
	VCC  ->   +5V (3.3V) (зависит от экрана)
	RS   ->   CS ( chip select )
	R/W	 ->   MOSI
	E	 ->   SCK
	PS8  ->   GND ( для работы в режиме SPI )
	RST  ->   RST ( Reset )
	BLA	 ->   anode led ( +3.3V or PWM )
	BLK	 ->   katode led ( GND )

*/

//##########  SETUP  ######################################################################################################################################
			
		// указываем порт SPI для HAL -------------------
		#define 	ST7920_SPI_HAL 		hspi1
		//-----------------------------------------------
		
		//=== указываем порты ( если в кубе назвали их RES CS то тогда нечего указывать не нужно )
		
		#if defined (RST_GPIO_Port)
		#else
			#define RST_GPIO_Port   	GPIOA
			#define RST_Pin				GPIO_PIN_12
		#endif
		

		#if defined (CS_GPIO_Port)
		#else
			#define CS_GPIO_Port    GPIOA
			#define CS_Pin			GPIO_PIN_14
		#endif

		
		//=============================================================================
		
//##########################################################################################################################

// далее в файле fonts.h если не используем какойто шрифт то коментируем его для экономии памяти

//##############################################################################################################

//---- для экономии памяти шрифты которые не используються закоментировать -------------------------------------
			// Шрифт имеет кирилицу и латиницу
			#define FONT_6x8		//  6 x 8 pixels font size structure 
			#define FONT_7x9		//  7 x 9 pixels font size structure 
			#define FONT_11x18		//  11 x 18 pixels font size structure 
			#define FONT_16x26		//  16 x 26 pixels font size structure 
			// Только цифры -- only numbers
			#define FONT_16x28		//  16 x 28 pixels font size structure only numbers	
//--------------------------------------------------------------------------------------------------------------

//##############################################################################################################





	#include "ST7920.h"

	#include "fonts.h"
	#include "bitm

	#include "stdio.h" // sprintf() printf()
	.........
	.........

main()=============================================================================================================================
	
  	// инициализация дисплея
  	ST7920_Init();

  	// включаем графический режим ( передаем истину )
  	ST7920_Graphic_mode(1);

  	// выбираем расположение ( ротацию ) экрана
  	ST7920_rotation(1);			// 0-стандартный( по умолчанию) 1-поворот на 180 градусов ( вызывать до формирования данных в буфере )

  	//--------------------------------------------------------------------
  	// очищаем экран и буффер кадра
  	ST7920_Clear();
  	// загоняем в буфер кадра картинку (массив logo)
  	// параметры координаты начала X Y, массив, ширина и высота картинки, цвет (PIX_OFF, PIX_ON)
  	ST7920_DrawBitmap(0, 0, logo, 128, 27, PIX_ON);
  	// выводим сформированный буфер кадра на экран
  	ST7920_Update();
  	//--------------------------------------------------------------------

  	HAL_Delay(2000);

  	//--------------------------------------------------------------------
  	// инверсия дисплея ( инвертирует по вертикальным блокам по 8 пикселей в каждом )
  	// первый параметр начала блока для инверсии, второй конец всего значение от 0 до 1024
  	ST7920_Inversion(0, 1024);// 0....1024
  	// выводим сформированный буфер кадра на экран
  	ST7920_Update();

  	HAL_Delay(2000);

  	// инверсия дисплея ( инвертирует по вертикальным блокам по 8 пикселей в каждом )
	// первый параметр начала блока для инверсии, второй конец всего значение от 0 до 1024
	ST7920_Inversion(0, 1024);// 0....1024
	// выводим сформированный буфер кадра на экран
	ST7920_Update();

	HAL_Delay(2000);
	//-------------------------------------------------------------------


	//-------------------------------------------------------------------
	// выключаем/включаем отображение данных на экране ( очищаем экран но данные остаются в буфере кадра )
	// 0- выключить, 1 - включить
  	ST7920_Display_On_Off(0);

  	HAL_Delay(1000);

  	// выключаем/включаем отображение данных на экране ( очищаем экран но данные остаются в буфере кадра )
  	// 0- выключить, 1 - включить
  	ST7920_Display_On_Off(1);

  	HAL_Delay(1000);
  	//-------------------------------------------------------------------

  	// очищаем экран и буффер кадра
  	ST7920_Clear();

  	//--------------------------------------------------------------------
  	// печать строки ( подерживает латиницу кириллицу ( в том числе Укр яз )
  	// параметры координаты начало строки X Y, сама строка, размер шрифта, множитель, цвет ( PIX_ON- белый , PIX_OFF -черный )
  	// шрифты &Font_6x8   &Font_7x9   &Font_11x18  &Font_16x26  ( &Font_16x28 - только Цифры )
	ST7920_Print ( 1, 2, "Привет Привіт Hello", &Font_6x8, 1, PIX_ON );
	// выводим сформированный буфер кадра на экран
	ST7920_Update();

	HAL_Delay(1000);

	// печать строки ( подерживает латиницу кириллицу ( в том числе Укр яз )
	// параметры координаты начало строки X Y, сама строка, размер шрифта, множитель, цвет ( PIX_ON- белый , PIX_OFF -черный )
	// шрифты &Font_6x8   &Font_7x9   &Font_11x18  &Font_16x26  ( &Font_16x28 - только Цифры )
	ST7920_Print ( 1, 13, "Привет", &Font_7x9, 1, PIX_ON );
	// выводим сформированный буфер кадра на экран
	ST7920_Update();

	HAL_Delay(1000);

	// печать строки ( подерживает латиницу кириллицу ( в том числе Укр яз )
	// параметры координаты начало строки X Y, сама строка, размер шрифта, множитель, цвет ( PIX_ON- белый , PIX_OFF -черный )
	// шрифты &Font_6x8   &Font_7x9   &Font_11x18  &Font_16x26  ( &Font_16x28 - только Цифры )
	ST7920_Print ( 1, 24, "Привет", &Font_11x18, 1, PIX_ON );
	// выводим сформированный буфер кадра на экран
	ST7920_Update();

	HAL_Delay(1000);

	// печать строки ( подерживает латиницу кириллицу ( в том числе Укр яз )
	// параметры координаты начало строки X Y, сама строка, размер шрифта, множитель, цвет ( PIX_ON- белый , PIX_OFF -черный )
	// шрифты &Font_6x8   &Font_7x9   &Font_11x18  &Font_16x26  ( &Font_16x28 - только Цифры )
	ST7920_Print ( 1, 40, "Привет", &Font_16x26, 1, PIX_ON );
	// выводим сформированный буфер кадра на экран
	ST7920_Update();

	HAL_Delay(1000);
	//----------------------------------------------------------------------

	// очищаем экран и буффер кадра
	ST7920_Clear();

	//----------------------------------------------------------------------
	// рисуем пиксель ( координаты )
	ST7920_Draw_pixel( 2, 2);

	// рисуем разные фигуры
	ST7920_Draw_line( 20, 20, 30, 30, PIX_OFF );	// цвет ( PIX_ON- белый , PIX_OFF -черный )
	ST7920_Draw_rectangle( 40, 40, 10, 20, PIX_OFF );	// цвет ( PIX_ON- белый , PIX_OFF -черный )
	ST7920_Draw_rectangle_filled(70, 30, 10, 20, PIX_OFF );	// цвет ( PIX_ON- белый , PIX_OFF -черный )
	ST7920_Draw_triangle( 20, 20, 50, 30, 100, 20, PIX_OFF );	// цвет ( PIX_ON- белый , PIX_OFF -черный )
	ST7920_Draw_triangle_filled( 20, 20, 51, 31, 100, 20, PIX_OFF );	// цвет ( PIX_ON- белый , PIX_OFF -черный )
	ST7920_Draw_circle( 40, 40, 20, PIX_OFF );	// цвет ( PIX_ON- белый , PIX_OFF -черный )
	ST7920_Draw_circle_filled( 40, 40, 20, PIX_OFF );	// цвет ( PIX_ON- белый , PIX_OFF -черный )
	
	// рисуем прямоугольник с закругленными краями ( закрашенный )
	ST7920_DrawFillRoundRect(10, 10, 50, 50, 10, PIX_OFF);	// цвет ( PIX_ON- белый , PIX_OFF -черный )
	
	// рисуем прямоугольник с закругленными краями ( пустотелый )
	ST7920_DrawRoundRect(10, 10, 50, 50, 10, PIX_OFF);	// цвет ( PIX_ON- белый , PIX_OFF -черный )
	
	// рисуем полукруг ( правое или левое полушарие (параметр 1 или 2) ) закрашенный
	ST7920_DrawFillCircleHelper(30, 30, 20 , 1, 0, PIX_OFF);	// цвет ( PIX_ON- белый , PIX_OFF -черный )
	
	// рисуем дугу ( четверть круга (параметр 1, 2, 4, 8) ) шириной 1 пиксель
	ST7920_DrawCircleHelper(30, 30, 20 , 1, PIX_OFF);	// цвет ( PIX_ON- белый , PIX_OFF -черный )

	// выводим сформированный буфер кадра на экран
	ST7920_Update();

	HAL_Delay(2000);
	//--------------------------------------------------------------------------

	// очищаем экран и буффер кадра
	ST7920_Clear();

	//--------------------------------------------------------------------------

	for( uint16_t i = 0; i < 127; i++ ){
		char f[4];
		sprintf(f,"%3d", i);
		ST7920_Print ( 30, 20, f, &Font_6x8, 3, PIX_ON ); // печатаем надпись с указаным шрифтом и цветом ( PIX_ON- белый , PIX_OFF -черный )
		// выводим сформированный буфер кадра на экран
		ST7920_Update();
		//HAL_Delay (100);
	}

	// очищаем экран и буффер кадра
	ST7920_Clear();
	//---------------------------------------------------------------------------

	


	.........
	.........
	.........
	.........

=== end while(1) ==================================================================================================================
=== end main() ====================================================================================================================
